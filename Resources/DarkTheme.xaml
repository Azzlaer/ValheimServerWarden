<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
    <Color x:Key="BorderMediumColor">#FF888888</Color>
    <Color x:Key="BorderDarkColor">#FF444444</Color>
    <SolidColorBrush x:Key="DarkBrush" Color="#FF4B4B4B" />
    <SolidColorBrush x:Key="DarkBorderBrush" Color="#FF666666" />
    <SolidColorBrush x:Key="LightTextBrush" Color="#eee"/>
    <SolidColorBrush x:Key="OrangeSelectBrush" Color="Orange"/>
    <SolidColorBrush x:Key="BlackBrush" Color="#000" />
    <SolidColorBrush x:Key="StandardTextBrush" Color="White"/>
    <SolidColorBrush x:Key="SubduedTextBrush" Color="#ddd"/>
    <SolidColorBrush x:Key="RedBrush" Color="Red"/>
    <SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />
    <SolidColorBrush x:Key="GreenBrush" Color="Green" />
    <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />
    <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />
    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
    <LinearGradientBrush x:Key="TabSelectedBrush" EndPoint="0,1">
        <GradientStop Color="#FF898989"/>
        <GradientStop Color="#FF727272" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TabUnselectedBrush" EndPoint="0,1">
        <GradientStop Color="#FF666666"/>
        <GradientStop Color="#FF3A3A3A" Offset="1"/>
    </LinearGradientBrush>
    <Style TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="{StaticResource DarkBrush}"/>
    </Style>
    <Style TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{StaticResource LightTextBrush}"/>
    </Style>
    <Style TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource LightTextBrush}"/>
        <Setter Property="Background" Value="#FF898989"/>
        <Setter Property="Padding" Value="5"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#FF898989"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="{StaticResource LightTextBrush}"/>
        <Setter Property="Background" Value="#FF898989"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#FF898989"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="{StaticResource LightTextBrush}"/>
        <Setter Property="Background" Value="#FF727272"/>
        <Setter Property="Padding" Value="5"/>
    </Style>
    <Style TargetType="{x:Type RichTextBox}">
        <Setter Property="Foreground" Value="{StaticResource LightTextBrush}"/>
        <Setter Property="Background" Value="{StaticResource DarkBrush}"/>
        <Setter Property="Padding" Value="5"/>
    </Style>
    <Style TargetType="{x:Type Menu}">
        <Setter Property="Background" Value="{StaticResource DarkBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource LightTextBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource DarkBorderBrush}"/>
    </Style>
    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="Background" Value="{StaticResource DarkBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource LightTextBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource DarkBorderBrush}"/>
    </Style>
    <Style TargetType="{x:Type StatusBar}">
        <Setter Property="Background" Value="{StaticResource DarkBrush}"/>
    </Style>
    <Style TargetType="{x:Type TabControl}">
        <Setter Property="Background" Value="{StaticResource DarkBrush}"/>
    </Style>
    <Style TargetType="{x:Type DataGrid}">
        <Setter Property="Foreground" Value="{StaticResource LightTextBrush}"/>
        <Setter Property="Background" Value="{StaticResource DarkBrush}"/>
    </Style>
    <Style TargetType="{x:Type DataGridRowHeader}">
        <Setter Property="Background" Value="{StaticResource TabUnselectedBrush}"/>
    </Style>
    <Style TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Foreground" Value="{StaticResource LightTextBrush}"/>
        <Setter Property="Background" Value="{StaticResource TabUnselectedBrush}"/>
        <Setter Property="Padding" Value="5,5,5,5"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource OrangeSelectBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type DataGridCellsPanel}">
        <Setter Property="Background" Value="{StaticResource DarkBrush}"/>
    </Style>
    <Style TargetType="{x:Type DataGridRow}">
        <Setter Property="Background" Value="{StaticResource DarkBrush}"/>
    </Style>
    <Style TargetType="{x:Type DataGridCell}">
        <Setter Property="Foreground" Value="{StaticResource LightTextBrush}"/>
        <Setter Property="Background" Value="{StaticResource DarkBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BlackBrush}"/>
        <Setter Property="Padding" Value="10,10,10,10"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource LightTextBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource DarkBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource OrangeSelectBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Foreground" Value="{StaticResource LightTextBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid>
                        <Border 
                                Name="Border"
                                Margin="0,0,-4,0" 
                                Background="{StaticResource TabUnselectedBrush}"
                                BorderBrush="{StaticResource  SolidBorderBrush}" 
                                BorderThickness="1,1,1,1" 
                                CornerRadius="2,12,0,0" >
                            <ContentPresenter x:Name="ContentSite"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"
                                    ContentSource="Header"
                                    Margin="12,2,12,2"
                                    RecognizesAccessKey="True"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource TabSelectedBrush}" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ScrollViewer for a MenuItem-->
    <!--MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter" />

    <Style x:Key="MenuScrollViewer"
       TargetType="{x:Type ScrollViewer}"
       BasedOn="{x:Null}">
        <Setter Property="HorizontalScrollBarVisibility"
          Value="Hidden" />
        <Setter Property="VerticalScrollBarVisibility"
          Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border Grid.Row="1"
                  Grid.Column="0">
                            <ScrollContentPresenter Margin="{TemplateBinding Padding}" />
                        </Border>
                        <RepeatButton Style="{StaticResource MenuScrollButton}"
                        Grid.Row="0"
                        Grid.Column="0"
                        Command="{x:Static ScrollBar.LineUpCommand}"
                        CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                        Focusable="False">
                            <RepeatButton.Visibility>
                                <MultiBinding FallbackValue="Visibility.Collapsed"
                            Converter="{StaticResource MenuScrollingVisibilityConverter}"
                            ConverterParameter="0">
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                         Path="ComputedVerticalScrollBarVisibility" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                         Path="VerticalOffset" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                         Path="ExtentHeight" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                         Path="ViewportHeight" />
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"
                  Data="{StaticResource UpArrow}" />
                        </RepeatButton>
                        <RepeatButton Style="{StaticResource MenuScrollButton}"
                        Grid.Row="2"
                        Grid.Column="0"
                        Command="{x:Static ScrollBar.LineDownCommand}"
                        CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                        Focusable="False">
                            <RepeatButton.Visibility>
                                <MultiBinding FallbackValue="Visibility.Collapsed"
                            Converter="{StaticResource MenuScrollingVisibilityConverter}"
                            ConverterParameter="100">
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                         Path="ComputedVerticalScrollBarVisibility" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                         Path="VerticalOffset" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                         Path="ExtentHeight" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                         Path="ViewportHeight" />
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"
                  Data="{StaticResource DownArrow}" />
                        </RepeatButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style-->
</ResourceDictionary>